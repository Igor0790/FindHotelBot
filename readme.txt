Инструкция по эксплуатации телеграм-бота, перечень файлов проекта и краткое описание.

Файлы в корне проекта:


.env.template - образец файла .env с описанием данных.
.env - необходимо создать вручную и поместить Токен телеграм-бота, API-ключ (rapidapi.com), данные для подключения в Базе Данных PostgressSQL
loader.py - создаёт экземпляры: телеграмм-бота и базы данных.
main.py - запускает бота и создаёт базу данных,
readme.txt - инструкция по эксплуатации телеграмм-бота
requirements.txt - перечень библиотек Python, необходимый для работы бота.



Пакеты в корне проекта:

1. config_data:
init.py - инициализирует пакет config_data и его содержимое
config.py - содержит перечень команд бота, доступных клиенту, и загрузка переменных с вирт. окружения

2. keyboards:
init.py - инициализирует пакет keyboars и его содержимое
    2.1 inline:
        init.py - инициализирует пакет inline и его содержимое
        inline_board - логика работы inline клавиатур бота
    2.2 reply:
        init.py - инициализирует пакет reply и его содержимое
        reply_board.py - логика работы reply клавиатур бота

3. handlers:
init.py - инициализирует пакет handlers и его содержимое
    3.1 custom_handlers:
        init.py - инициализирует пакет custom_handlers и его содержимое
        echo.py - содержит хэндлеры для отлова прочих сообщений (вне сценария)
        find_hotel_by_price.py - логика работы команд: lowprice, highprice
        bestdeal.py - логика работы команды bestdeal
        history.py - логика работы команды history
        calendar.py - callback функции, отвечающие за формирование календарей
        inline_board.py - callback функции для работы пагинации
    3.2 default_heandlers:
        init.py - инициализирует пакет default_heandlers и его содержимое
        help.py - логика работы команды help
        start.py - логика работы команды start

4. database:
init.py - инициализирует пакет database и его содержимое
data_hotel.py - содержит класс database, отвечающий за работу с БД

5. states:
init.py - инициализирует пакет states и его содержимое
bot_state.py - класс состояний

6. utils:
init.py - инициализирует пакет utils и его содержимое
other_utils.py - функции создания календаря и обработки данных (возвращения списка)
pars.py - функции, выполняющие запрос к API, и заполняющие БД данными
set_bot_command.py - список команд бота


Заметки по эксплуатации:

Для запуска бота, Вам необходимо будет создать виртуальное окружение. Поместить токен-бота и API-ключ rapidapi.com в
переменные окружения (Файл .env). Далее запускаем бота в файле main.py.
Для работы с БД рекомендуется использовать PostgressSQL. Примечание - данные в БД автоматически не удаляются,
нужно следить за наполнением.


Команды бота:
/start - Запуск бота
/help — помощь по командам бота,
/lowprice — вывод самых дешёвых отелей в городе,
/highprice — вывод самых дорогих отелей в городе,
/bestdeal — вывод отелей, наиболее подходящих по цене и расположению от центра.
/history — вывод истории поиска отелей